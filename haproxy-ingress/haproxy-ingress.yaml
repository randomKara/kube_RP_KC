apiVersion: v1
kind: Namespace
metadata:
  name: ingress-haproxy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: haproxy-ingress
  namespace: ingress-haproxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: haproxy-ingress
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - "discovery.k8s.io"
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: haproxy-ingress
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: haproxy-ingress
subjects:
  - kind: ServiceAccount
    name: haproxy-ingress
    namespace: ingress-haproxy
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-ingress
  namespace: ingress-haproxy
data:
  ssl-redirect: "false"
  timeout-client: "50s"
  timeout-connect: "5s"
  timeout-server: "50s"
  ssl-options: "no-sslv3 no-tlsv10 no-tlsv11"
  ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
  ssl-mode-async: "true"
  hard-stop-after: "60s"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: haproxy-ingress
  name: haproxy-ingress
  namespace: ingress-haproxy
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: haproxy-ingress
  template:
    metadata:
      labels:
        app.kubernetes.io/name: haproxy-ingress
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: haproxy-ingress
          image: quay.io/jcmoraisjr/haproxy-ingress:v0.14.4
          args:
            - --configmap=ingress-haproxy/haproxy-ingress
            - --default-backend-service=ingress-haproxy/ingress-default
            - --ingress-class=haproxy
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            runAsUser: 0
            allowPrivilegeEscalation: true
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
      serviceAccountName: haproxy-ingress
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: haproxy-ingress
  name: haproxy-ingress
  namespace: ingress-haproxy
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    - name: stat
      port: 1024
      protocol: TCP
      targetPort: 1024
  selector:
    app.kubernetes.io/name: haproxy-ingress
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-default
  namespace: ingress-haproxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress-default
  template:
    metadata:
      labels:
        app: ingress-default
    spec:
      containers:
      - name: ingress-default
        image: k8s.gcr.io/defaultbackend-amd64:1.5
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-default
  namespace: ingress-haproxy
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: ingress-default
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: haproxy
spec:
  controller: haproxy-ingress.github.io/controller 